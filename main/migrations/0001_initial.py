# Generated by Django 3.0 on 2020-04-18 13:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MusicInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('type', models.CharField(max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicInstrumentEffect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=25)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effects', to='main.MusicInstrument')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('desc', models.CharField(max_length=250)),
                ('creation_date', models.DateTimeField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrackSettings',
            fields=[
                ('track', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='settings', serialize=False, to='main.MusicTrack')),
                ('allow_comments', models.BooleanField()),
                ('allow_rating', models.BooleanField()),
                ('allow_reusing', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='TrackComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=400)),
                ('creation_date', models.DateTimeField()),
                ('edit_date', models.DateTimeField()),
                ('checked_by_author', models.BooleanField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='', upload_to='profile_pics')),
                ('status', models.CharField(default='', max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MusicTrackProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('desc', models.CharField(max_length=250)),
                ('creation_date', models.DateTimeField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MusicTrackPattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('color', models.CharField(max_length=25)),
                ('duration', models.FloatField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patterns', to='main.MusicTrackProject')),
            ],
        ),
        migrations.AddField(
            model_name='musictrack',
            name='comments',
            field=models.ManyToManyField(related_name='comments', to='main.TrackComment'),
        ),
        migrations.AddField(
            model_name='musictrack',
            name='dislikes',
            field=models.ManyToManyField(related_name='dislikes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musictrack',
            name='likes',
            field=models.ManyToManyField(related_name='likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musictrack',
            name='listeners',
            field=models.ManyToManyField(related_name='listened_tracks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musictrack',
            name='reports',
            field=models.ManyToManyField(related_name='reports', to='main.TrackComment'),
        ),
        migrations.CreateModel(
            name='MusicNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('duration', models.FloatField(validators=[django.core.validators.MinValueValidator(0.05)])),
                ('notation', models.PositiveIntegerField(choices=[(1, 'C'), (2, 'C#'), (3, 'D'), (4, 'D#'), (5, 'E'), (6, 'F'), (7, 'F#'), (8, 'G'), (9, 'G#'), (10, 'A'), (11, 'A#'), (12, 'B')])),
                ('octave', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(7)])),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='main.MusicTrackPattern')),
            ],
        ),
        migrations.CreateModel(
            name='MusicInstrumentSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('data', jsonfield.fields.JSONField(default=dict)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='main.MusicInstrument')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicInstrumentEffectSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('data', jsonfield.fields.JSONField(default=dict)),
                ('effect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='main.MusicInstrumentEffect')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='musicinstrument',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruments', to='main.MusicTrackProject'),
        ),
    ]
